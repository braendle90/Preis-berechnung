@model List<PriceCalculation.ViewModels.GetLogoPositionOPLViewModel>

@{
    ViewData["Title"] = "PositionView";
}

<h1>PositionView</h1>

<h4>CreatePositionViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="PositionViewCreate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @for (int i = 0; i < Model.Count; i++)
            {




                <input readonly asp-for="@Model[i].OrderId" class="form-control" />

                <div class="form-group">
                    <label asp-for="@Model[i].PositionId" class="control-label"></label>
                    <select asp-for="@Model[i].PositionId" class="form-control" asp-items="@(new SelectList(Model[0].PositionList,"Id","PositionName"))"></select>
                    <span asp-validation-for="@Model[i].PositionId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model[i].LogoId" class="control-label"></label>
                    <select asp-for="@Model[i].LogoId" class="form-control" asp-items="@(new SelectList(Model[0].LogoList,"Id","LogoName"))"></select>
                    <span asp-validation-for="@Model[i].LogoId" class="text-danger"></span>
                </div>

            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
